{
 "Resources": {
  "MyVpcF9F0CA6F": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/Resource"
   }
  },
  "MyVpcpublicSubnet1Subnet75CA916A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyVpc/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/publicSubnet1/Subnet"
   }
  },
  "MyVpcpublicSubnet1RouteTable2E0CCC3A": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyVpc/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/publicSubnet1/RouteTable"
   }
  },
  "MyVpcpublicSubnet1RouteTableAssociation6D520F26": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcpublicSubnet1RouteTable2E0CCC3A"
    },
    "SubnetId": {
     "Ref": "MyVpcpublicSubnet1Subnet75CA916A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/publicSubnet1/RouteTableAssociation"
   }
  },
  "MyVpcpublicSubnet1DefaultRoute1C88571A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcpublicSubnet1RouteTable2E0CCC3A"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    }
   },
   "DependsOn": [
    "MyVpcVPCGW488ACE0D"
   ],
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/publicSubnet1/DefaultRoute"
   }
  },
  "MyVpcpublicSubnet1EIPA11A8EA3": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyVpc/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/publicSubnet1/EIP"
   }
  },
  "MyVpcpublicSubnet1NATGateway1839A981": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "MyVpcpublicSubnet1Subnet75CA916A"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVpcpublicSubnet1EIPA11A8EA3",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyVpc/publicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyVpcpublicSubnet1DefaultRoute1C88571A",
    "MyVpcpublicSubnet1RouteTableAssociation6D520F26"
   ],
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/publicSubnet1/NATGateway"
   }
  },
  "MyVpcIGW5C4A4F63": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/IGW"
   }
  },
  "MyVpcVPCGW488ACE0D": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    },
    "InternetGatewayId": {
     "Ref": "MyVpcIGW5C4A4F63"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyVpc/VPCGW"
   }
  },
  "NodeServerSGAD8AB5AD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for the Node.js server instance",
    "GroupName": "my-test-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "SSH from anywhere",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "HTTP from anywhere",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "HTTPS from anywhere",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "MyVpcF9F0CA6F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/NodeServerSG/Resource"
   }
  },
  "MyInstanceRoleBF418E71": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyInstanceRole/Resource"
   }
  },
  "MyInstanceRoleDefaultPolicyB1E4F044": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2-instance-connect:SendSSHPublicKey",
        "ec2:CreateTags",
        "ec2:DescribeInstances",
        "ec2:DescribeTags",
        "ec2:ModifyInstanceAttribute",
        "ec2:StartInstances",
        "ec2:StopInstances",
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyInstanceRoleDefaultPolicyB1E4F044",
    "Roles": [
     {
      "Ref": "MyInstanceRoleBF418E71"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyInstanceRole/DefaultPolicy/Resource"
   }
  },
  "MyInstanceInstanceProfile2784C631": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "MyInstanceRoleBF418E71"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyInstance/InstanceProfile"
   }
  },
  "MyInstanceA12EC128": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "MyInstanceInstanceProfile2784C631"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "KeyName": "renew",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "NodeServerSGAD8AB5AD",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "MyVpcpublicSubnet1Subnet75CA916A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "SeconInstanceStack/MyInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "MyInstanceRoleDefaultPolicyB1E4F044",
    "MyInstanceRoleBF418E71"
   ],
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/MyInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VPQWrDMBB8S+6y2riF9hpMCb4EYYdcy1re0E1sKUirhGD898pWW6enmR2tZmZz+fYin1dw85luz1lHjRxqBn0WUfocUOdyOFy0KI7moAqhQtORrkNjkCdtYZUNjHtoOlz0Rdt4bzUBkzV/yxP5KNUEO+AtMN7gPk2lYXTx+4MUs3+mDcd2Xz0aFjXq4IjvW2fDZU79J5TGMxiNyTLxURD0cqhsqjmjsvGkOWVhv/vK2SN1OI6iQm+DS24KHPQYS84eDw+FNS1NR47C2BblyT9d1+9y/Srz1ckTZS4Yph5llfAbIM8lnX4BAAA="
   },
   "Metadata": {
    "aws:cdk:path": "SeconInstanceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}